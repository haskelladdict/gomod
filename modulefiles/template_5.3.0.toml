# long description of module package
longDescription = """
gcc version 5.3.0

Testing:
--------
$ module load gcc_libs-5.3.0

Website: http://www.gcc.gnu.org/
 Source: http://mirrors.concertpass.com/gcc/releases/gcc-5.3.0/
   Test: See 'Testing' section above.
"""

# short description of module package
shortDescription = """
This module contains the GNU compiler collection libraries
Version: 5.3.0 
"""

# conflictMods lists modules which conflict with loading the current module
conflictMods = [
"clang_3.8.0"
]

# prereqMods lists modules which need to be loaded before loading the current module
prereqMods = [
"zlib_1.2.3"
]

# loadMods lists modules which will be loaded after loading of the current module
loadMods = [
"mpcc_1.0.3", 
"gmp_6.1.0", 
"mpfr_3.1.3"
]

# prepend the given values for each of the listed environmental variables.
# NOTE: The delimiter for prepending is a colon ":"
[prependEnv]
LD_LIBRARY_PATH = "/path/to/sth"
LIBRARY_PATH = "/path/to/sth1"

# append the given values for each of the listed environmental variables.
# NOTE: The delimiter for appending is a colon ":"
[appendEnv]
LD_LIBRARY_PATH = "/another/path"
LIBRARY_PATH = "/important/path"

# remove the given values for each of the listed environmental variables.
# NOTE 1: The delimiter for splitting values for the listed environmental
# variables is a colon ":". 
# NOTE 2: If the provided value is not present it is ingored
[removeEnv]
LD_LIBRARY_PATH = "/this/has/to/go"
LIBRARY_PATH = "/this/has/to/go/as/well"

# set the given environmental variables to the provided values
# NOTE: If the environmental variable exists it will be overwritten
[setEnv]
COOL_ENV = "very cool"

# unset the given environmental variable. 
# NOTE: If an optional value is provided it will be used to set the environmental
# variable after unsetting
[unsetEnv]
COOL_ENV = "default"

# setAlias sets an alias in the user's environment. Upon unloading the module 
# setAlias turns into an unsetAlias
# NOTE: For shells which don't support aliases this turns into a no-op
[setAlias]
foo = "bar"

# unsetAlias unsets an alias in the user's environment. 
# NOTE: For shells which don't support aliases this turns into a no-op
[unsetAlias]
foo = "bar"






